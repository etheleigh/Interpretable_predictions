{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0369f19f-8994-4272-8a82-216e4b21e4be",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import os\n",
    "import glob\n",
    "from pathlib import Path\n",
    "import pandas as pd\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "533e4afd-bbd7-48f9-8e58-67df125a7b1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "games = pd.read_csv('games.csv')\n",
    "# mechanics =  pd.read_csv('mechanics.csv')\n",
    "# themes =  pd.read_csv('themes.csv')\n",
    "user_ratings =  pd.read_csv('user_ratings.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0b722a0b-5ab4-4987-87ea-dd7eaf657910",
   "metadata": {},
   "outputs": [],
   "source": [
    "columns_to_keep = ['BGGId', 'YearPublished', 'GameWeight','NumWish','MfgPlaytime','MfgAgeRec','NumAlternates','NumExpansions','NumImplementations','Kickstarted',\n",
    "                   'Cat:Thematic','Cat:Strategy','Cat:War','Cat:Family','Cat:CGS','Cat:Abstract','Cat:Party','Cat:Childrens']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "43b7d239-5ce9-417e-8892-f7bd8e604b01",
   "metadata": {},
   "outputs": [],
   "source": [
    "games_all = games[columns_to_keep]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "373a5881-8e4a-4efe-9945-82f9439c5777",
   "metadata": {},
   "outputs": [],
   "source": [
    "# merged_df = pd.merge(games_all, mechanics, on='BGGId')\n",
    "# games_all = pd.merge(merged_df, themes, on='BGGId')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "34483166-8a42-419c-8cd0-d2fea9993d72",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "column_to_encode = 'Username'\n",
    "label_encoder = LabelEncoder()\n",
    "user_ratings[column_to_encode] = label_encoder.fit_transform(user_ratings[column_to_encode])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "04d778dd-be88-4215-9230-17df324c0730",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import accuracy_score, classification_report\n",
    "from sklearn.preprocessing import LabelEncoder"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "37407acf-1424-40b3-b859-e324eb3389d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "# percentage_to_keep = 0.05\n",
    "# num_rows_to_keep = int(len(user_ratings) * percentage_to_keep)\n",
    "\n",
    "# # Keep 10% of the rows randomly\n",
    "# ur_sub = user_ratings.sample(n=num_rows_to_keep, random_state=42)\n",
    "\n",
    "user_votes = user_ratings.groupby('Username').size().reset_index(name='vote_count')\n",
    "\n",
    "# Step 2: Sort users by vote count in descending order\n",
    "sorted_users = user_votes.sort_values(by='vote_count', ascending=False)\n",
    "\n",
    "# Step 3: Select the top 10% of users\n",
    "percentage_to_keep = 0.10\n",
    "num_users_to_keep = int(len(sorted_users) * percentage_to_keep)\n",
    "top_users = sorted_users.head(num_users_to_keep)\n",
    "\n",
    "# Step 4: Filter the original DataFrame to keep only rows corresponding to the selected users\n",
    "ur_sub = user_ratings[user_ratings['Username'].isin(top_users['Username'])]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "8f0ff5b1-533c-4877-b40a-7bdad9e4a638",
   "metadata": {},
   "outputs": [],
   "source": [
    "del games\n",
    "# del themes\n",
    "# del mechanics\n",
    "del user_ratings"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "1edd7f45-f9fb-4033-9545-b46c5ea9bcce",
   "metadata": {},
   "outputs": [],
   "source": [
    "total = pd.merge(ur_sub, games_all, on='BGGId')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d3d84b30-16e0-4529-b505-b8c4f462b830",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "your_column = 'Rating'\n",
    "\n",
    "plt.hist(user_ratings[your_column], bins=10, edgecolor='black')\n",
    "plt.title(f'Distribution of {your_column}')\n",
    "plt.xlabel(your_column)\n",
    "plt.ylabel('Frequency')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3d2f97b1-f1ab-4132-8ecb-ed53093e4a23",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "dd806a59-6728-4d5a-bc41-14a58813ed9c",
   "metadata": {},
   "outputs": [],
   "source": [
    "total['sentiment'] = total['Rating'].apply(lambda x: 0 if x <= 7 else 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9c4ff52c-b51d-4897-9015-4e0a11a33d5e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['BGGId', 'Rating', 'Username', 'YearPublished', 'GameWeight', 'NumWish',\n",
       "       'MfgPlaytime', 'MfgAgeRec', 'NumAlternates', 'NumExpansions',\n",
       "       'NumImplementations', 'Kickstarted', 'Cat:Thematic', 'Cat:Strategy',\n",
       "       'Cat:War', 'Cat:Family', 'Cat:CGS', 'Cat:Abstract', 'Cat:Party',\n",
       "       'Cat:Childrens', 'sentiment'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0b0144dc-dc38-4f9c-8e25-42482a54bacf",
   "metadata": {},
   "outputs": [],
   "source": [
    "column_names = list(total.columns.values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "931d6b5b-d96d-4803-bcff-e1500db4fc49",
   "metadata": {},
   "outputs": [],
   "source": [
    "# column_names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "1bbda30e-cda1-4aa6-a831-0488b570713c",
   "metadata": {},
   "outputs": [],
   "source": [
    "target_variable = 'sentiment'  # You need to define this based on your problem\n",
    "features = [ 'YearPublished', 'GameWeight', 'NumWish',\n",
    "       'MfgPlaytime', 'MfgAgeRec', 'NumAlternates', 'NumExpansions',\n",
    "       'NumImplementations', 'Kickstarted', 'Cat:Thematic', 'Cat:Strategy',\n",
    "       'Cat:War', 'Cat:Family', 'Cat:CGS', 'Cat:Abstract', 'Cat:Party',\n",
    "       'Cat:Childrens']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "fca2f22c-61f1-4958-95f1-8f769d49a7fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "label_encoder = LabelEncoder()\n",
    "for column in total.select_dtypes(include=['object']).columns:\n",
    "    total[column] = label_encoder.fit_transform(total[column])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "501f7017-51fc-433e-b08f-84187983ecda",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_df, test_df = train_test_split(total, test_size=0.2, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "23dd500e-44f2-40e0-a502-b1debe9969c9",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train = train_df[features]\n",
    "y_train = train_df[target_variable]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "443268ce-f22a-4a02-8a82-f989580122d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "# from sklearn.metrics import accuracy_score\n",
    "from sklearn.svm import SVC\n",
    "\n",
    "classifier = LogisticRegression(random_state=1,n_jobs=-1)\n",
    "classifier.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "4503dc22-ac72-4614-a07a-24fe2bd2db4b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# from sklearn.neural_network import MLPClassifier\n",
    "# from sklearn.datasets import make_classification\n",
    "# from sklearn.model_selection import train_test_split\n",
    "\n",
    "# # X, y = make_classification(n_samples=100, random_state=1)\n",
    "# # X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y,\n",
    "# #                                                     random_state=1)\n",
    "# clf = MLPClassifier(random_state=1, max_iter=300).fit(X_train, y_train)\n",
    "# clf.predict_proba(X_test[:1])\n",
    "# clf.predict(X_test[:5, :])\n",
    "# clf.score(X_test, y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "44e10e18-c185-49a8-b67a-b47246acb81e",
   "metadata": {},
   "outputs": [],
   "source": [
    "X_test = test_df[features]\n",
    "y_test = test_df[target_variable]\n",
    "\n",
    "predictions = classifier.predict(X_test)\n",
    "# predictions = clf.predict(X_test)\n",
    "print(\"Accuracy:\", accuracy_score(y_test, predictions))\n",
    "print(\"Classification Report:\\n\", classification_report(y_test, predictions))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "3454a2ed-498a-4b33-abee-6eb217f04184",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>BGGId</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Username</th>\n",
       "      <th>YearPublished</th>\n",
       "      <th>GameWeight</th>\n",
       "      <th>NumWish</th>\n",
       "      <th>MfgPlaytime</th>\n",
       "      <th>MfgAgeRec</th>\n",
       "      <th>NumAlternates</th>\n",
       "      <th>NumExpansions</th>\n",
       "      <th>...</th>\n",
       "      <th>Theme_Geocaching</th>\n",
       "      <th>Theme_Ecology</th>\n",
       "      <th>Theme_Chernobyl</th>\n",
       "      <th>Theme_Photography</th>\n",
       "      <th>Theme_French Foreign Legion</th>\n",
       "      <th>Theme_Cruise ships</th>\n",
       "      <th>Theme_Apache Tribes</th>\n",
       "      <th>Theme_Rivers</th>\n",
       "      <th>Theme_Flags identification</th>\n",
       "      <th>sentiment</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>476271</th>\n",
       "      <td>254640</td>\n",
       "      <td>8.0</td>\n",
       "      <td>407939</td>\n",
       "      <td>2018</td>\n",
       "      <td>1.0453</td>\n",
       "      <td>3054</td>\n",
       "      <td>20</td>\n",
       "      <td>8</td>\n",
       "      <td>14</td>\n",
       "      <td>4</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>805352</th>\n",
       "      <td>22</td>\n",
       "      <td>9.0</td>\n",
       "      <td>166736</td>\n",
       "      <td>1979</td>\n",
       "      <td>4.5277</td>\n",
       "      <td>1528</td>\n",
       "      <td>240</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>770372</th>\n",
       "      <td>207016</td>\n",
       "      <td>7.0</td>\n",
       "      <td>56253</td>\n",
       "      <td>2017</td>\n",
       "      <td>2.1111</td>\n",
       "      <td>592</td>\n",
       "      <td>45</td>\n",
       "      <td>8</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>891381</th>\n",
       "      <td>5217</td>\n",
       "      <td>5.0</td>\n",
       "      <td>287432</td>\n",
       "      <td>1956</td>\n",
       "      <td>2.9333</td>\n",
       "      <td>86</td>\n",
       "      <td>20</td>\n",
       "      <td>10</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>807612</th>\n",
       "      <td>266444</td>\n",
       "      <td>3.0</td>\n",
       "      <td>390010</td>\n",
       "      <td>2018</td>\n",
       "      <td>2.0000</td>\n",
       "      <td>58</td>\n",
       "      <td>60</td>\n",
       "      <td>8</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>259178</th>\n",
       "      <td>42215</td>\n",
       "      <td>6.0</td>\n",
       "      <td>42975</td>\n",
       "      <td>2009</td>\n",
       "      <td>2.1299</td>\n",
       "      <td>3077</td>\n",
       "      <td>60</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>365838</th>\n",
       "      <td>12942</td>\n",
       "      <td>7.0</td>\n",
       "      <td>160834</td>\n",
       "      <td>2004</td>\n",
       "      <td>1.1374</td>\n",
       "      <td>2510</td>\n",
       "      <td>20</td>\n",
       "      <td>8</td>\n",
       "      <td>22</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131932</th>\n",
       "      <td>54998</td>\n",
       "      <td>7.0</td>\n",
       "      <td>188438</td>\n",
       "      <td>2009</td>\n",
       "      <td>2.8176</td>\n",
       "      <td>5936</td>\n",
       "      <td>90</td>\n",
       "      <td>13</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>671155</th>\n",
       "      <td>175621</td>\n",
       "      <td>6.0</td>\n",
       "      <td>196182</td>\n",
       "      <td>2015</td>\n",
       "      <td>2.5141</td>\n",
       "      <td>422</td>\n",
       "      <td>40</td>\n",
       "      <td>13</td>\n",
       "      <td>3</td>\n",
       "      <td>26</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121958</th>\n",
       "      <td>40270</td>\n",
       "      <td>8.5</td>\n",
       "      <td>330799</td>\n",
       "      <td>2008</td>\n",
       "      <td>2.8940</td>\n",
       "      <td>533</td>\n",
       "      <td>30</td>\n",
       "      <td>13</td>\n",
       "      <td>4</td>\n",
       "      <td>52</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>757688 rows × 395 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         BGGId  Rating  Username  YearPublished  GameWeight  NumWish  \\\n",
       "476271  254640     8.0    407939           2018      1.0453     3054   \n",
       "805352      22     9.0    166736           1979      4.5277     1528   \n",
       "770372  207016     7.0     56253           2017      2.1111      592   \n",
       "891381    5217     5.0    287432           1956      2.9333       86   \n",
       "807612  266444     3.0    390010           2018      2.0000       58   \n",
       "...        ...     ...       ...            ...         ...      ...   \n",
       "259178   42215     6.0     42975           2009      2.1299     3077   \n",
       "365838   12942     7.0    160834           2004      1.1374     2510   \n",
       "131932   54998     7.0    188438           2009      2.8176     5936   \n",
       "671155  175621     6.0    196182           2015      2.5141      422   \n",
       "121958   40270     8.5    330799           2008      2.8940      533   \n",
       "\n",
       "        MfgPlaytime  MfgAgeRec  NumAlternates  NumExpansions  ...  \\\n",
       "476271           20          8             14              4  ...   \n",
       "805352          240         12              1              0  ...   \n",
       "770372           45          8              2              1  ...   \n",
       "891381           20         10              2              0  ...   \n",
       "807612           60          8              6              0  ...   \n",
       "...             ...        ...            ...            ...  ...   \n",
       "259178           60         10              0              1  ...   \n",
       "365838           20          8             22              2  ...   \n",
       "131932           90         13              5              7  ...   \n",
       "671155           40         13              3             26  ...   \n",
       "121958           30         13              4             52  ...   \n",
       "\n",
       "        Theme_Geocaching  Theme_Ecology  Theme_Chernobyl  Theme_Photography  \\\n",
       "476271                 0              0                0                  0   \n",
       "805352                 0              0                0                  0   \n",
       "770372                 0              0                0                  0   \n",
       "891381                 0              0                0                  0   \n",
       "807612                 0              0                0                  0   \n",
       "...                  ...            ...              ...                ...   \n",
       "259178                 0              0                0                  0   \n",
       "365838                 0              0                0                  0   \n",
       "131932                 0              0                0                  0   \n",
       "671155                 0              0                0                  0   \n",
       "121958                 0              0                0                  0   \n",
       "\n",
       "        Theme_French Foreign Legion  Theme_Cruise ships  Theme_Apache Tribes  \\\n",
       "476271                            0                   0                    0   \n",
       "805352                            0                   0                    0   \n",
       "770372                            0                   0                    0   \n",
       "891381                            0                   0                    0   \n",
       "807612                            0                   0                    0   \n",
       "...                             ...                 ...                  ...   \n",
       "259178                            0                   0                    0   \n",
       "365838                            0                   0                    0   \n",
       "131932                            0                   0                    0   \n",
       "671155                            0                   0                    0   \n",
       "121958                            0                   0                    0   \n",
       "\n",
       "        Theme_Rivers  Theme_Flags identification  sentiment  \n",
       "476271             0                           0          1  \n",
       "805352             0                           0          1  \n",
       "770372             0                           0          0  \n",
       "891381             0                           0          0  \n",
       "807612             0                           0          0  \n",
       "...              ...                         ...        ...  \n",
       "259178             0                           0          0  \n",
       "365838             0                           0          0  \n",
       "131932             0                           0          0  \n",
       "671155             0                           0          0  \n",
       "121958             0                           0          1  \n",
       "\n",
       "[757688 rows x 395 columns]"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# pip install shap\n",
    "train_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "5203543f-3f1b-4047-bf5e-fa33566ce485",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x790 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "ename": "AttributeError",
     "evalue": "'list' object has no attribute 'shape'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[32], line 45\u001b[0m\n\u001b[0;32m     42\u001b[0m user_id_example \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m407939\u001b[39m  \u001b[38;5;66;03m# Replace with an actual user ID\u001b[39;00m\n\u001b[0;32m     43\u001b[0m game_id_example \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m254640\u001b[39m  \u001b[38;5;66;03m# Replace with an actual game ID\u001b[39;00m\n\u001b[1;32m---> 45\u001b[0m prediction, explanation \u001b[38;5;241m=\u001b[39m \u001b[43mpredict_and_explain\u001b[49m\u001b[43m(\u001b[49m\u001b[43muser_id_example\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mgame_id_example\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m     47\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mPrediction:\u001b[39m\u001b[38;5;124m\"\u001b[39m, prediction)\n\u001b[0;32m     48\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mExplanation:\u001b[39m\u001b[38;5;124m\"\u001b[39m, explanation)\n",
      "Cell \u001b[1;32mIn[32], line 30\u001b[0m, in \u001b[0;36mpredict_and_explain\u001b[1;34m(user_id, game_id)\u001b[0m\n\u001b[0;32m     27\u001b[0m     explanation \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mThe model predicts that the user is not interested in the game.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m     29\u001b[0m \u001b[38;5;66;03m# Suggest counterfactuals to yield a positive prediction\u001b[39;00m\n\u001b[1;32m---> 30\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[43mshap_values\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mshape\u001b[49m[\u001b[38;5;241m0\u001b[39m] \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m     31\u001b[0m     counterfactuals \u001b[38;5;241m=\u001b[39m shap\u001b[38;5;241m.\u001b[39mforce_plot(explainer\u001b[38;5;241m.\u001b[39mexpected_value[\u001b[38;5;241m0\u001b[39m], shap_values[\u001b[38;5;241m0\u001b[39m], game_features)\n\u001b[0;32m     32\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n",
      "\u001b[1;31mAttributeError\u001b[0m: 'list' object has no attribute 'shape'"
     ]
    }
   ],
   "source": [
    "import shap\n",
    "\n",
    "def predict_and_explain(user_id, game_id):\n",
    "    # Assuming 'user_id' and 'game_id' are the identifiers for the user and game in your dataset\n",
    "\n",
    "    # Extract user and game features\n",
    "    user_features = total.loc[total['Username'] == user_id, features]\n",
    "    game_features = total.loc[total['BGGId'] == game_id, features]\n",
    "\n",
    "    # Ensure both user and game exist in the dataset\n",
    "    if user_features.empty or game_features.empty:\n",
    "        return \"User or game not found in the dataset\", None\n",
    "\n",
    "    # Get the binary prediction\n",
    "    prediction = classifier.predict(game_features)\n",
    "\n",
    "    # Use SHAP to calculate feature importances\n",
    "    explainer = shap.TreeExplainer(classifier)\n",
    "    shap_values = explainer.shap_values(game_features)\n",
    "\n",
    "    # Summarize the feature importance\n",
    "    explanation_summary = shap.summary_plot(shap_values, game_features, feature_names=features)\n",
    "\n",
    "    if prediction[0] == 1:\n",
    "        explanation = \"The model predicts that the user is interested in the game.\"\n",
    "    else:\n",
    "        explanation = \"The model predicts that the user is not interested in the game.\"\n",
    "\n",
    "    # Suggest counterfactuals to yield a positive prediction\n",
    "    if shap_values.shape[0] > 1:\n",
    "        counterfactuals = shap.force_plot(explainer.expected_value[0], shap_values[0], game_features)\n",
    "    else:\n",
    "        counterfactuals = shap.force_plot(explainer.expected_value, shap_values[0], game_features)\n",
    "\n",
    "    explanation += \"\\n\\nSuggested counterfactuals to make the user interested:\\n\"\n",
    "    explanation += counterfactuals\n",
    "\n",
    "\n",
    "    return prediction[0], explanation\n",
    "\n",
    "# Example usage\n",
    "user_id_example = 407939  # Replace with an actual user ID\n",
    "game_id_example = 254640  # Replace with an actual game ID\n",
    "\n",
    "prediction, explanation = predict_and_explain(user_id_example, game_id_example)\n",
    "\n",
    "print(\"Prediction:\", prediction)\n",
    "print(\"Explanation:\", explanation)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4d351555-79e0-4882-aed3-78c2c6fb4c8a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.18"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
